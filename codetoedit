//#include <SimpleTimer.h>

/*
This code is edited from:
  Arduino Starter Kit example
  Project 6 - Light Theremin
*/
//SimpleTimer t;
//light sensor variables for pitch
int pitchSensorValue;
int pitchSensLow = 0;
int pitchSensHigh = 1023;
int pitch;
const int ledPin = 13;
//variables for theremin button
/*const int buttonTherPin = 4;
int buttonTherState = 0;
bool therPress = LOW;
//variables for potentiometer
int potVal;
int larghissimo = 20;
int prestissimo = 200;
int beat;
int meter;
String tempo;
//variables for metrenome button
const int buttonMetrPin = 8;
int buttonMetrState = 0;
bool metrPress = LOW;*/

void setup() {
  // Make the LED pin an output and turn it on
  pinMode(ledPin, OUTPUT);
  digitalWrite(ledPin, HIGH);
  //save other pins as inputs and start the serial monitor
  pinMode(buttonTherPin, INPUT);
  Serial.begin(9600);

  // calibrate for the first three seconds after program runs
  while (millis() < 3000) {
    // record the maximum sensor value
    pitchSensorValue = analogRead(A0);
    if (pitchSensorValue > pitchSensHigh) {
      pitchSensHigh = pitchSensorValue;
    }
    // record the minimum sensor value
    if (pitchSensorValue < pitchSensLow) {
      pitchSensLow = pitchSensorValue;
    }
  }
  // turn the LED off, signaling the end of the calibration period
  digitalWrite(ledPin, LOW);
}

void loop() {
//only starts the theremin when the button has been pressed
  while (therPress){
    //read the input from A0 and store it in a variable
    pitchSensorValue = analogRead(A0);
    //map the sensor values to a wide range of pitches
    pitch = map(pitchSensorValue, pitchSensLow, pitchSensHigh, 0, 2500);
    //play the tone on pin 2 at pitch(in Hz) for 100ms
    tone(2, pitch, 100);
    //read the input from A3 and store it in a variable
    /*potVal = analogRead(A3);
    //map the potentiometer values to a wide range of tempos
    beat = map(potVal, larghissimo, prestissimo, 20, 200);
    if (beat < 60){tempo = "larghissimo to largho ";}
    if (beat >= 60 and beat < 108){tempo = "larghetto to andante ";}
    if (beat >= 108 and beat < 168){tempo = "andantino to allegro ";}
    if (beat >=168){tempo = "vivace to prestissimo ";}
    //set meter and run metronome
    meter = 60000/beat;
    t.setInterval(meter, metronome);
    t.run();*/
    //check the state of the button to potentially end while loop
    buttonTherState = digitalRead(buttonTherPin);
    if (buttonTherState == HIGH)
    {
      therPress = !therPress;
    }
  }
  //checks if the button is pressed
  if (not therPress)
  {
    delay(250);
    buttonTherState = digitalRead(buttonTherPin);
    if(buttonTherState == HIGH)
    {
      therPress = !therPress;
      delay(250);
      Serial.println("volume: 0");
    }
  }
}
/*
//metronome function beeps if button is on
void metronome()
{
  //checks if button is pressed
  if (buttonMetrState == HIGH)
  {
      metrPress = !metrPress;
  }
  //only beeps if button is on
  if (metrPress)
  {
    //play a tone on pin 7 at 100Hz for 1ms
    tone(7,100,1);
  }
  //print the current values in the serial monitor
  Serial.print("Pitch:");
  Serial.print(pitch);
  Serial.print("hz, ");
  Serial.print(tempo);
  Serial.print(beat);
  Serial.print("bpm\n");
}*/
